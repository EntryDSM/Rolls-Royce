plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'com.diffplug.spotless' version '6.11.0'
	id "io.sentry.jvm.gradle" version "3.12.0"
}

group = 'kr.hs.entrydsm'
version = '0.0.0'
sourceCompatibility = JavaVersion.VERSION_11

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	implementation 'org.apache.poi:poi:3.16'
	implementation 'org.apache.poi:poi-ooxml:3.16'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.0.5'

	implementation 'com.amazonaws:aws-java-sdk-ses:1.11.852'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	implementation 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'com.querydsl:querydsl-jpa'
	annotationProcessor (
			"com.querydsl:querydsl-apt:5.0.0:jpa",
			'jakarta.persistence:jakarta.persistence-api')

	implementation 'com.itextpdf:itext7-core:7.1.9'
	implementation 'com.itextpdf:html2pdf:3.0.1'
	implementation group: 'ognl', name: 'ognl', version: '3.1.12'
	implementation group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	implementation files("$projectDir/src/main/webapp/WEB-INF/lib/OkCert3-java1.5-2.3.1.jar")

	implementation "org.apache.tomcat.embed:tomcat-embed-jasper"

	implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'

	implementation("io.sentry:sentry-spring-boot-starter:6.18.1")
	implementation("io.sentry:sentry-logback:6.18.1")
}

sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}

spotless {
	java {
		target("src/main/java/**/*.java", "src/main/test/**/*.java")

		palantirJavaFormat()

		formatAnnotations()
		importOrder("lombok", "org", "com", "java", "javax", "kr.hs.entrydsm")
		removeUnusedImports()
		trimTrailingWhitespace()
		indentWithSpaces()

// TODO : Wildcard import 제한
//		customLazy('block-wildcard-imports') {
//			name = 'Disallow wildcard imports'
//			description = 'Disallows wildcard imports in Java code'
//			// Java regex pattern to match wildcard imports
//			pattern = ~/import\s+.*\.\*;/
//
//			// Action to take when a violation occurs
//			action { violation ->
//				// Throw an error with the violation message
//				throw new GradleException(violation.message)
//			}
//		}
	}
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
	}
}

jar {
	enabled = false
}